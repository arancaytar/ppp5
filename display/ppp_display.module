<?php
// $Id$


/**
 * @file ppp_display.module
 * General hooks as well as helper functions for displaying PPP.
 */

/**
 * DB-less pager. We need this for PDO.
 */
function ppp_pager_args($limit = 10, $element = 0, $total = 10) {
  global $pager_page_array, $pager_total, $pager_total_items;
  $page = isset($_GET['page']) ? $_GET['page'] : '';

  $pager_total_items[$element] = $total;

  $pager_total[$element] = ceil($pager_total_items[$element] / $limit);
  $pager_page_array[$element] = max(0, min((int)$pager_page_array[$element], ((int)$pager_total[$element]) - 1));

  return array('start' => $pager_page_array[$element] * $limit, 'count' => $limit);
}

/**
 * Implementation of hook_menu()
 */
function ppp_display_menu() {
  $menu['archives'] = array(
    'title' => 'Archives',
    'description' => 'View all forums',
    'page callback' => '_ppp_display_page_main',
    'access arguments' => array('view archived content'),
    'file' => 'ppp_display.main.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $menu['forum/%ppp_forum'] = array(
    'title callback' => '_ppp_display_title_forum',
    'title arguments' => array(1),
    'page callback' => '_ppp_display_page_forum',
    'page arguments' => array(1),
    'access callback' => '_ppp_display_access_forum',
    'access arguments' => array(1),
    'file' => 'ppp_display.forum.inc',
    'type' => MENU_CALLBACK,
  );

  $menu['topic/%ppp_topic'] = array(
    'title callback' => '_ppp_display_title_topic',
    'title arguments' => array(1),
    'page callback' => '_ppp_display_page_topic',
    'page arguments' => array(1),
    'access callback' => '_ppp_display_access_topic',
    'access arguments' => array(1),
    'file' => 'ppp_display.topic.inc',
    'type' => MENU_CALLBACK,
  );

  return $menu;
}

/**
 * Implementation of hook_perm()
 */
function ppp_display_perm() {
  return array(
    'view archived content' => t('View any public forum, topic or post in the archives.'),
    'view classified content' => t('View content that is not public on the original forum.'),
  );
}

/**
 * Implementation of hook_theme()
 */
function ppp_display_theme() {
  return array(
    'ppp_display_post_sidebar' => array(
      'template' => 'ppp_display_post_sidebar',
      'variables' => array('post' => NULL, 'topic' => NULL, 'user' => NULL),
    ),
    'ppp_display_post_body' => array(
      'template' => 'ppp_display_post_body',
      'variables' => array('posts' => NULL, 'topic' => NULL, 'user' => NULL),
    ),
  );
}

/**
 * Determine whether the current user may view a certain forum.
 *
 * @param $forum
 *   The number of the forum that is being requested.
 *
 * @return
 *   A user access boolean.
 */
function _ppp_display_access_forum($forum) {
  $mod_boards = variable_get('ppp_classified_fora', array());
  if ($forum && !empty($mod_boards[$forum->fid])) {
    return user_access('view classified content');
  }
  else {
    return user_access('view archived content');
  }
}

/**
 * Determine whether the current user may view a certain topic. This is only
 * dependent on the forum the topic is in.
 *
 * @param $topic
 *   The number of the topic that is being requested.
 *
 * @return
 *   A user access boolean.
 */
function _ppp_display_access_topic($topic) {
  $mod_boards = variable_get('ppp_classified_fora', array());
  if ($topic && $forum = $topic->get_forum() && !empty($mod_boards[$forum->fid])) {
    return user_access('view classified content');
  }
  else {
    return user_access('view archived content');
  }
}

/**
 * Automatically load a forum object by its ID for the menu system.
 *
 * @param $fid
 *   The ID of the forum.
 *
 * @return
 *   The loaded forum object.
 */
function ppp_forum_load($fid) {
  module_load_include('inc', 'ppp_data', 'ppp_data.load');
  return ppp_data_load_forum($fid);
}

/**
 * Automatically load a topic object by its ID for the menu system.
 *
 * @param $tid
 *   The ID of the topic.
 *
 * @return
 *   The loaded topic object.
 */
function ppp_topic_load($tid) {
  module_load_include('inc', 'ppp_data', 'ppp_data.load');
  return ppp_data_load_topic($tid);
}

/**
 * Generate the title for a forum.
 */
function _ppp_display_title_forum($forum) {
  return $forum ? $forum->name : NULL;
}

/**
 * Generate the title for a topic.
 */
function _ppp_display_title_topic($topic) {
  return $topic ? $topic->title : NULL;
}

/**
 * Create a link to a user using a time-appropriate name if possible.
 */
function _ppp_display_userlink($uid, $date = NULL) {
  module_load_include('inc', 'ppp_data', 'ppp_data.load');
  $user = ppp_data_load_user($uid, $date);
  if ($user) {
    return l($user->fields['displayed_name'], 'member/' . $uid);
  }
  else {
    return t('User #!uid', array('!uid' => $uid));
  }
}

